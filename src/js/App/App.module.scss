/**
 * SPDX-FileCopyrightText: WARP <development@warp.lv>
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */

@mixin devBorderRandom {
  @if ($env == "development") {
    border: 1px solid rgb(random(255), random(255), random(255));
  }
}

.containApp {
  @include devBorderRandom;

  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1;
  height: calc(100vh - var(--header-height));
  overflow: hidden;
  box-sizing: border-box;
}

.containCanvas {
  @include devBorderRandom;

  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  box-sizing: border-box;
}

.loadingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  height: 100px;
  pointer-events: none;

  & > div {
    width: 64px;
    height: 64px;
    align-self: center;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    animation: spinner 5.0s linear infinite;
    padding-bottom: 1rem;
  }
}

.kicanvasEmbed {
  width: 100%;
  height: 100%;
  display: block; /* Ensure it's a block element */
  overflow: hidden; /* Prevent scrollbars on the element itself */

  /* Force hardware acceleration */
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

@keyframes spinner {
  to {transform: rotate(360deg);}
}

/* Force hide loading spinner when KiCanvas is ready */
:global(.force-hidden) {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
  transform: scale(0) !important;
}

/* Hide KiCanvas's own loading UI elements */
:global(kicanvas-embed) {
  /* Hide any loading overlays or spinners within KiCanvas */
  :global(.loading),
  :global(.spinner),
  :global(.loading-overlay),
  :global(.kc-loading),
  :global(.kc-spinner),
  :global([class*="loading"]),
  :global([class*="spinner"]) {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
  }
  
  /* Hide shadow DOM loading elements if accessible */
  :global(*[loading]),
  :global(*[data-loading]) {
    display: none !important;
  }
}

/* Hide only the loading spinner pseudo-element, not the entire element */
:global(.icon-loading::after) {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  animation: none !important;
  content: none !important;
}

/* More specific targeting within viewer */
:global(.viewer) :global(.icon-loading::after) {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  animation: none !important;
  content: none !important;
}

/* Also hide any spinning animations on loading elements */
:global([class*="loading"]) {
  animation: none !important;
}

:global([class*="loading"]::after) {
  animation: none !important;
  content: none !important;
}
